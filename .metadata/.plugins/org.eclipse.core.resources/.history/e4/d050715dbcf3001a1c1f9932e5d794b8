package com.sarish.moviecatalogservice.resources;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.sarish.moviecatalogservice.models.CatalogItem;
import com.sarish.moviecatalogservice.models.Movie;
import com.sarish.moviecatalogservice.models.UserDetails;
import com.sarish.moviecatalogservice.models.UserRating;
import com.sarish.moviecatalogservice.repository.UserRepository;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogResource {
	@Autowired
	private RestTemplate restTemplate;
	@Autowired
	UserRepository repository;
	@RequestMapping("/{userId}")
	public List<CatalogItem> getCatalog(@PathVariable("userId") int userId){
		UserDetails ud = repository.findById(userId).orElseThrow(() -> new IllegalArgumentException("Not Found"));
		//Get all rated movie Id
		UserRating ratings = restTemplate.getForObject("http://localhost:8083/ratingsdata/users/"+userId,UserRating.class);
		//for each movie id call  movie-info-service and get details
		return ratings.getRatings().stream().map(rating->{
			Movie movie = restTemplate.getForObject("http://localhost:8082/movies/"+rating.getMovieId(), Movie.class);
			return new CatalogItem(ud.getUserName(),movie.getName(),rating.getRating());
			}).collect(Collectors.toList());
	}
}
